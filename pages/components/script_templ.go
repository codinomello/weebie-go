// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.833
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func ScriptHead() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = ScriptHeadSource().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = ScriptHeadTheme().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = ScriptHeadTailwindConfig().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func ScriptBody() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = ScriptBodySource().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = ScriptBodyFirebase().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func ScriptHeadSource() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var3 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var3 == nil {
			templ_7745c5c3_Var3 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<!-- Tailwind CSS --><script src=\"https://cdn.tailwindcss.com\"></script><!-- HTMX --><script src=\"https://unpkg.com/htmx.org@2.0.4\"></script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func ScriptHeadTheme() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var4 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var4 == nil {
			templ_7745c5c3_Var4 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<script>\n        document.addEventListener('DOMContentLoaded', () => {\n            const themeToggleDarkIcon = document.getElementById('theme-toggle-dark-icon');\n            const themeToggleLightIcon = document.getElementById('theme-toggle-light-icon');\n            const themeToggleBtn = document.getElementById('theme-toggle');\n\n            // Verifica o tema salvo no localStorage ou a prefer√™ncia do sistema\n            if (localStorage.getItem('color-theme') === 'dark' || (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {\n                // Se o tema escuro estiver ativo, exibe o √≠cone da lua e oculta o √≠cone do sol\n                document.documentElement.classList.add('dark');\n                themeToggleDarkIcon.classList.remove('hidden');\n                themeToggleLightIcon.classList.add('hidden');\n            } else {\n                // Se o tema claro estiver ativo, exibe o √≠cone do sol e oculta o √≠cone da lua\n                document.documentElement.classList.remove('dark');\n                themeToggleLightIcon.classList.remove('hidden');\n                themeToggleDarkIcon.classList.add('hidden');\n            }\n\n            // Adiciona o evento de clique ao bot√£o de altern√¢ncia de tema\n            themeToggleBtn.addEventListener('click', () => {\n                // Alterna os √≠cones\n                themeToggleDarkIcon.classList.toggle('hidden');\n                themeToggleLightIcon.classList.toggle('hidden');\n\n                // Alterna o tema\n                if (document.documentElement.classList.contains('dark')) {\n                document.documentElement.classList.remove('dark');\n                localStorage.setItem('color-theme', 'light');\n                } else {\n                document.documentElement.classList.add('dark');\n                localStorage.setItem('color-theme', 'dark');\n                }\n            });\n        });\n    </script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func ScriptHeadTailwindConfig() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var5 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var5 == nil {
			templ_7745c5c3_Var5 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "<script>\n        tailwind.config = {\n          darkMode: 'class',\n          theme: {\n            extend: {\n              colors: {\n                // Cores prim√°rias\n                red: '#FF0000',    // Vermelho\n                green: '#32CD32',  // Verde\n                blue: '#00BFFF',   // Azul\n                lilac: '#C8A2C8',  // Lil√°s\n                pink: '#FF1493',   // Rosa\n                orange: '#FF6F00', // Laranja\n                golden: '#FFD700', // Ouro\n\n                // Cores sucund√°rias\n                brown: '#8B4513',  // Marrom\n                teal: '#40E0D0',   // Turquesa\n                silver: '#C0C0C0', // Prata\n                copper: '#B87333', // Cobre\n              }\n            }\n          }\n        }\n    </script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func ScriptHeadODSList() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var6 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var6 == nil {
			templ_7745c5c3_Var6 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "<script>\n        const odsList = [\n            { number: 1, emoji: 'üçΩÔ∏è', name: 'Erradica√ß√£o da Pobreza', description: 'Acabar com a pobreza em todas as suas formas, em todos os lugares.' },\n            { number: 2, emoji: 'üå±', name: 'Fome Zero e Agricultura Sustent√°vel', description: 'Acabar com a fome, alcan√ßar a seguran√ßa alimentar e promover a agricultura sustent√°vel.' },\n            { number: 3, emoji: 'üíä', name: 'Sa√∫de e Bem-Estar', description: 'Assegurar uma vida saud√°vel e promover o bem-estar para todos.' },\n            { number: 4, emoji: 'üìö', name: 'Educa√ß√£o de Qualidade', description: 'Garantir educa√ß√£o inclusiva e equitativa de qualidade.' },\n            { number: 5, emoji: 'üë©\u200d‚ù§Ô∏è\u200düë®', name: 'Igualdade de G√™nero', description: 'Alcan√ßar a igualdade de g√™nero e empoderar todas as mulheres e meninas.' },\n            { number: 6, emoji: 'üíß', name: '√Ågua Pot√°vel e Saneamento', description: 'Garantir disponibilidade e manejo sustent√°vel da √°gua.' },\n            { number: 7, emoji: '‚ö°', name: 'Energia Limpa e Acess√≠vel', description: 'Garantir acesso √† energia acess√≠vel, confi√°vel e sustent√°vel.' },\n            { number: 8, emoji: 'üíº', name: 'Trabalho Decente e Crescimento Econ√¥mico', description: 'Promover o crescimento econ√¥mico sustentado e o trabalho decente.' },\n            { number: 9, emoji: 'üè≠', name: 'Ind√∫stria, Inova√ß√£o e Infraestrutura', description: 'Construir infraestrutura resiliente e promover a industrializa√ß√£o sustent√°vel.' },\n            { number: 10, emoji: '‚öñÔ∏è', name: 'Redu√ß√£o das Desigualdades', description: 'Reduzir a desigualdade dentro e entre os pa√≠ses.' },\n            { number: 11, emoji: 'üåÜ', name: 'Cidades e Comunidades Sustent√°veis', description: 'Tornar as cidades e os assentamentos humanos inclusivos, seguros e sustent√°veis.' },\n            { number: 12, emoji: '‚ôªÔ∏è', name: 'Consumo e Produ√ß√£o Respons√°veis', description: 'Garantir padr√µes de consumo e produ√ß√£o sustent√°veis.' },\n            { number: 13, emoji: 'üå°Ô∏è', name: 'A√ß√£o Contra a Mudan√ßa Global do Clima', description: 'Tomar medidas urgentes para combater a mudan√ßa clim√°tica.' },\n            { number: 14, emoji: 'üêü', name: 'Vida na √Ågua', description: 'Conservar e usar de forma sustent√°vel os oceanos e recursos marinhos.' },\n            { number: 15, emoji: 'üå≥', name: 'Vida Terrestre', description: 'Proteger, restaurar e promover o uso sustent√°vel dos ecossistemas terrestres.' },\n            { number: 16, emoji: 'üïäÔ∏è', name: 'Paz, Justi√ßa e Institui√ß√µes Eficazes', description: 'Promover sociedades pac√≠ficas e inclusivas para o desenvolvimento sustent√°vel.' },\n            { number: 17, emoji: 'ü§ù', name: 'Parcerias e Meios de Implementa√ß√£o', description: 'Fortalecer os meios de implementa√ß√£o e revitalizar a parceria global.' }\n        ];\n    </script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func ScriptBodySource() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var7 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var7 == nil {
			templ_7745c5c3_Var7 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "<!-- Importa√ß√£o do Flowbite.js via CDN --><script src=\"https://cdnjs.cloudflare.com/ajax/libs/flowbite/2.2.0/flowbite.min.js\"></script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func ScriptBodyFirebase() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var8 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var8 == nil {
			templ_7745c5c3_Var8 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "<script src=\"https://www.gstatic.com/firebasejs/9.22.0/firebase-app-compat.js\"></script><script src=\"https://www.gstatic.com/firebasejs/9.22.0/firebase-auth-compat.js\"></script><script>\n        const firebaseConfig = {\n            apiKey: \"AIzaSyAI0Tc7GssKwWwtVdrz6OaK6KFACx58N5U\",\n            authDomain: \"weebie-go.firebaseapp.com\",\n            projectId: \"weebie-go\",\n            storageBucket: \"weebie-go.firebasestorage.app\",\n            messagingSenderId: \"321509944065\",\n            appId: \"1:321509944065:web:199a546b7055f461ec4900\",\n            measurementId: \"G-S5CG0CLRVS\"\n        };\n\n        // Inicialize o Firebase\n        const app = firebase.initializeApp(firebaseConfig);\n        const auth = firebase.auth();\n\n        // Fun√ß√µes de Login e Cadastro\n        document.getElementById(\"auth-form\").addEventListener(\"submit\", async (e) => {\n            e.preventDefault();\n\n            const email = document.querySelector(\"#auth-form input[type='email']\").value;\n            const password = document.querySelector(\"#auth-form input[type='password']\").value;\n\n            try {\n                const userCredential = await auth.signInWithEmailAndPassword(email, password);\n                const user = userCredential.user;\n                alert(\"Login realizado com sucesso!\");\n                // Redirecione o usu√°rio ou fa√ßa algo com o objeto `user`\n            } catch (error) {\n                alert(\"Erro ao fazer login: \" + error.message);\n            }\n        });\n\n        document.getElementById(\"toggle-auth\").addEventListener(\"click\", () => {\n            const formTitle = document.getElementById(\"form-title\");\n            const formAction = document.getElementById(\"form-action\");\n            const nameField = document.getElementById(\"name-field\");\n            const phoneField = document.getElementById(\"phone-field\");\n\n            if (formTitle.textContent === \"Login\") {\n                formTitle.textContent = \"Cadastro\";\n                formAction.textContent = \"Cadastrar\";\n                nameField.classList.remove(\"hidden\");\n                phoneField.classList.remove(\"hidden\");\n            } else {\n                formTitle.textContent = \"Login\";\n                formAction.textContent = \"Entrar\";\n                nameField.classList.add(\"hidden\");\n                phoneField.classList.add(\"hidden\");\n            }\n        });\n\n        document.getElementById(\"auth-form\").addEventListener(\"submit\", async (e) => {\n            e.preventDefault();\n\n            const email = document.querySelector(\"#auth-form input[type='email']\").value;\n            const password = document.querySelector(\"#auth-form input[type='password']\").value;\n            const name = document.querySelector(\"#auth-form input[type='text']\").value;\n\n            try {\n                const userCredential = await auth.createUserWithEmailAndPassword(email, password);\n                const user = userCredential.user;\n                await user.updateProfile({ displayName: name });\n                alert(\"Cadastro realizado com sucesso!\");\n                // Redirecione o usu√°rio ou fa√ßa algo com o objeto `user`\n            } catch (error) {\n                alert(\"Erro ao cadastrar: \" + error.message);\n            }\n        });\n\n        // Login com Google\n        const googleProvider = new firebase.auth.GoogleAuthProvider();\n        document.getElementById(\"google-signin\").addEventListener(\"click\", () => {\n            auth.signInWithPopup(googleProvider)\n                .then((result) => {\n                    const user = result.user;\n                    alert(\"Login com Google realizado com sucesso!\");\n                    // Redirecione o usu√°rio ou fa√ßa algo com o objeto `user`\n                })\n                .catch((error) => {\n                    alert(\"Erro ao fazer login com Google: \" + error.message);\n                });\n        });\n\n        // Login com Facebook\n        const facebookProvider = new firebase.auth.FacebookAuthProvider();\n        document.getElementById(\"facebook-signin\").addEventListener(\"click\", () => {\n            auth.signInWithPopup(facebookProvider)\n                .then((result) => {\n                    const user = result.user;\n                    alert(\"Login com Facebook realizado com sucesso!\");\n                    // Redirecione o usu√°rio ou fa√ßa algo com o objeto `user`\n                })\n                .catch((error) => {\n                    alert(\"Erro ao fazer login com Facebook: \" + error.message);\n                });\n        });\n\n        // Login com GitHub\n        const githubProvider = new firebase.auth.GithubAuthProvider();\n        document.getElementById(\"github-signin\").addEventListener(\"click\", () => {\n            auth.signInWithPopup(githubProvider)\n                .then((result) => {\n                    const user = result.user;\n                    alert(\"Login com GitHub realizado com sucesso!\");\n                    // Redirecione o usu√°rio ou fa√ßa algo com o objeto `user`\n                })\n                .catch((error) => {\n                    alert(\"Erro ao fazer login com GitHub: \" + error.message);\n                });\n        });\n\n        // Observador de Autentica√ß√£o\n        auth.onAuthStateChanged((user) => {\n            if (user) {\n                console.log(\"Usu√°rio logado:\", user);\n                // Redirecione para a p√°gina principal ou fa√ßa algo com o objeto `user`\n            } else {\n                console.log(\"Usu√°rio n√£o logado\");\n            }\n        });\n    </script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func ScriptBodyODSList() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var9 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var9 == nil {
			templ_7745c5c3_Var9 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "<script>\n        document.addEventListener('DOMContentLoaded', () => {\n            const themeToggle = document.getElementById('theme-toggle');\n            const html = document.documentElement;\n            const odsContainer = document.getElementById('ods-container');\n            const odsPopover = document.getElementById('ods-popover');\n            const odsTitle = document.getElementById('ods-title');\n            const odsDescription = document.getElementById('ods-description');\n\n            // Tema\n            themeToggle.addEventListener('click', () => {\n                html.classList.toggle('dark');\n                localStorage.setItem('theme', html.classList.contains('dark') ? 'dark' : 'light');\n            });\n\n            if (localStorage.getItem('theme') === 'dark') html.classList.add('dark');\n\n            // Gerar ODS\n            odsList.forEach(ods => {\n                const odsItem = document.createElement('div');\n                odsItem.className = 'flex items-center justify-between p-2 rounded-lg bg-white dark:bg-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600';\n                odsItem.innerHTML = `\n                    <label class=\"flex items-center gap-2 flex-1\">\n                        <input type=\"checkbox\" name=\"ods\" value=\"${ods.number}\" \n                                class=\"w-4 h-4 border-golden rounded focus:ring-golden dark:bg-gray-900\">\n                        <span class=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\n                            ${ods.emoji} ODS ${ods.number}\n                        </span>\n                    </label>\n                    <button type=\"button\" class=\"text-golden hover:text-golden/80 px-2 ods-info\" \n                            data-number=\"${ods.number}\">+</button>`;\n                odsContainer.appendChild(odsItem);\n            });\n\n            // Popover ODS\n            document.querySelectorAll('.ods-info').forEach(button => {\n                button.addEventListener('click', (e) => {\n                    const odsNumber = parseInt(e.target.dataset.number);\n                    const ods = odsList.find(o => o.number === odsNumber);\n                    \n                    // Posicionar popover\n                    const rect = e.target.getBoundingClientRect();\n                    odsPopover.style.top = `${rect.top + window.scrollY}px`;\n                    odsPopover.style.left = `${rect.left + rect.width + 10}px`;\n                    \n                    // Atualizar conte√∫do\n                    odsTitle.textContent = ods.name;\n                    odsDescription.textContent = ods.description;\n                    odsPopover.classList.remove('hidden');\n                });\n            });\n\n            // Fechar popover\n            document.addEventListener('click', (e) => {\n                if (!e.target.closest('.ods-info') && !e.target.closest('#ods-popover')) {\n                    odsPopover.classList.add('hidden');\n                }\n            });\n        });\n    </script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func ScriptGetCurrentYear() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var10 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var10 == nil {
			templ_7745c5c3_Var10 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "<script>\n        // Ano atual\n        var years = document.getElementsByClassName(\"current-year\");\n        Array.from(years).forEach(year => {\n            year.innerHTML = new Date().getFullYear();\n        });\n    </script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
