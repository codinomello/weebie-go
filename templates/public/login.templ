package public

import components "github.com/codinomello/weebie-go/templates/components"

templ Login() {
<!doctype html>
<html lang="pt-BR">
<head>
    <!-- Meta Tags -->
    @components.Meta()
    <!-- T√≠tulo -->
    @components.Title("Weebie - Projetos Comunit√°rios")
    <!-- √çcone -->
    <link rel="icon" type="image/x-icon" href="/hou">
    <!-- HTMX e Tailwind CSS -->
    @components.ScriptHead()
    <!-- Flowbite CSS e √çcone -->
    @components.Link()
    <!-- Fonte -->
    @components.StyleFont()
</head>
<body class="bg-gray-50 dark:bg-gray-900 flex flex-col items-center justify-center min-h-screen">
    <!-- Header -->
    <nav class="bg-gradient-to-r from-orange to-golden dark:from-gray-800 dark:to-gray-700 px-4 py-4 shadow-xl fixed top-0 w-full">
        <div class="container mx-auto flex items-center justify-between">
            <div class="flex items-center space-x-3">
                <span class="text-3xl text-white">üè°</span>
                <h1 class="text-2xl font-bold text-white">Weebie</h1>
            </div>
            
            <!-- Bot√£o de Tema e Menu Mobile -->
            <div class="flex items-center space-x-4">
                <!-- Bot√£o de Tema Moderno -->
                <button id="theme-toggle" class="theme-toggle">
                    <span class="sr-only">Alternar Modo Escuro</span>
                    @components.StyleToggleTheme()
                </button>

                <!-- Menu Mobile -->
                <button class="md:hidden text-white p-2 rounded-lg hover:bg-white/10 transition-colors">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16m-7 6h7"/>
                    </svg>
                </button>
            </div>
        </div>
    </nav>

    <!-- Formul√°rio de Login/Cadastro -->
    <main class="container mx-auto px-4 py-8 max-w-md">
        <div class="bg-white dark:bg-gray-800 rounded-2xl p-8 shadow-lg border border-gray-200 dark:border-gray-700">
            <h2 id="form-title" class="text-2xl font-bold text-orange dark:text-golden mb-6 text-center">Login</h2>

            <!-- Formul√°rio de Autentica√ß√£o-->
            <form id="auth-form" class="space-y-6">
                <!-- Nome (apenas para cadastro) -->
                <div id="name-field" class="space-y-2 hidden">
                    <label class="block text-sm font-medium text-gray-700 dark:text-gray-300">Nome</label>
                    <input type="text" 
                           class="w-full px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 focus:ring-2 focus:ring-orange">
                </div>

                <!-- E-mail -->
                <div class="space-y-2">
                    <label class="block text-sm font-medium text-gray-700 dark:text-gray-300">E-mail</label>
                    <input type="email" 
                           class="w-full px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 focus:ring-2 focus:ring-orange">
                </div>

                <!-- Telefone (apenas para cadastro) -->
                <div id="phone-field" class="space-y-2 hidden">
                    <label class="block text-sm font-medium text-gray-700 dark:text-gray-300">Telefone</label>
                    <input type="tel" 
                           class="w-full px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 focus:ring-2 focus:ring-orange">
                </div>

                <!-- Senha -->
                <div class="space-y-2">
                    <label class="block text-sm font-medium text-gray-700 dark:text-gray-300">Senha</label>
                    <input type="password" 
                           class="w-full px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 focus:ring-2 focus:ring-orange">
                </div>

                <!-- Bot√£o de A√ß√£o -->
                <button type="submit" class="w-full px-6 py-2 bg-gradient-to-r from-orange to-golden text-white rounded-lg hover:opacity-90 transition">
                    <span id="form-action">Entrar</span>
                </button>
            </form>

            <!-- Divisor -->
            <div class="flex items-center my-6">
                <div class="flex-1 h-px bg-gray-300 dark:bg-gray-600"></div>
                <span class="px-4 text-sm text-gray-500 dark:text-gray-400">ou</span>
                <div class="flex-1 h-px bg-gray-300 dark:bg-gray-600"></div>
            </div>

            <!-- Bot√µes de OAuth2 -->
            <div class="space-y-4">
                <button id="google-signin" class="w-full flex items-center justify-center px-6 py-2 bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-600 transition">
                    <img src="https://www.google.com/favicon.ico" alt="Google" class="w-5 h-5 mr-2">
                    <span class="text-sm font-medium text-gray-700 dark:text-gray-300">Continuar com Google</span>
                </button>
                <button id="facebook-signin" class="w-full flex items-center justify-center px-6 py-2 bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-600 transition">
                    <img src="https://www.facebook.com/favicon.ico" alt="Facebook" class="w-5 h-5 mr-2">
                    <span class="text-sm font-medium text-gray-700 dark:text-gray-300">Continuar com Facebook</span>
                </button>
                <button id="github-signin" class="w-full flex items-center justify-center px-6 py-2 bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-600 transition">
                    <img src="https://github.com/favicon.ico" alt="GitHub" class="w-5 h-5 mr-2">
                    <span class="text-sm font-medium text-gray-700 dark:text-gray-300">Continuar com GitHub</span>
                </button>
            </div>

            <!-- Alternar entre Login e Cadastro -->
            <div class="mt-6 text-center">
                <button id="toggle-auth" class="text-sm text-blue hover:text-blue/80">
                    <span>N√£o tem uma conta? Cadastre-se</span>
                </button>
            </div>
        </div>
    </main>

    <!-- Rodap√© -->
    @components.FooterLogin()

    <!-- Scripts -->
    @components.ScriptBody()
    <script>
        const firebaseConfig = {
            apiKey: "AIzaSyAI0Tc7GssKwWwtVdrz6OaK6KFACx58N5U",
            authDomain: "weebie-go.firebaseapp.com",
            projectId: "weebie-go",
            storageBucket: "weebie-go.firebasestorage.app",
            messagingSenderId: "321509944065",
            appId: "1:321509944065:web:199a546b7055f461ec4900",
            measurementId: "G-S5CG0CLRVS"
        };

        // Inicialize o Firebase
        const app = firebase.initializeApp(firebaseConfig);
        const auth = firebase.auth();

        // Fun√ß√µes de Login e Cadastro
        document.getElementById("auth-form").addEventListener("submit", async (e) => {
            e.preventDefault();

            const email = document.querySelector("#auth-form input[type='email']").value;
            const password = document.querySelector("#auth-form input[type='password']").value;

            try {
                const userCredential = await auth.signInWithEmailAndPassword(email, password);
                const user = userCredential.user;
                alert("Login realizado com sucesso!");
                // Redirecione o usu√°rio ou fa√ßa algo com o objeto `user`
            } catch (error) {
                alert("Erro ao fazer login: " + error.message);
            }
        });

        document.getElementById("toggle-auth").addEventListener("click", () => {
            const formTitle = document.getElementById("form-title");
            const formAction = document.getElementById("form-action");
            const nameField = document.getElementById("name-field");
            const phoneField = document.getElementById("phone-field");

            if (formTitle.textContent === "Login") {
                formTitle.textContent = "Cadastro";
                formAction.textContent = "Cadastrar";
                nameField.classList.remove("hidden");
                phoneField.classList.remove("hidden");
            } else {
                formTitle.textContent = "Login";
                formAction.textContent = "Entrar";
                nameField.classList.add("hidden");
                phoneField.classList.add("hidden");
            }
        });

        document.getElementById("auth-form").addEventListener("submit", async (e) => {
            e.preventDefault();

            const email = document.querySelector("#auth-form input[type='email']").value;
            const password = document.querySelector("#auth-form input[type='password']").value;
            const name = document.querySelector("#auth-form input[type='text']").value;

            try {
                const userCredential = await auth.createUserWithEmailAndPassword(email, password);
                const user = userCredential.user;
                await user.updateProfile({ displayName: name });
                alert("Cadastro realizado com sucesso!");
                // Redirecione o usu√°rio ou fa√ßa algo com o objeto `user`
            } catch (error) {
                alert("Erro ao cadastrar: " + error.message);
            }
        });

        // Login com Google
        const googleProvider = new firebase.auth.GoogleAuthProvider();
        document.getElementById("google-signin").addEventListener("click", () => {
            auth.signInWithPopup(googleProvider)
                .then((result) => {
                    const user = result.user;
                    alert("Login com Google realizado com sucesso!");
                    // Redirecione o usu√°rio ou fa√ßa algo com o objeto `user`
                })
                .catch((error) => {
                    alert("Erro ao fazer login com Google: " + error.message);
                });
        });

        // Login com Facebook
        const facebookProvider = new firebase.auth.FacebookAuthProvider();
        document.getElementById("facebook-signin").addEventListener("click", () => {
            auth.signInWithPopup(facebookProvider)
                .then((result) => {
                    const user = result.user;
                    alert("Login com Facebook realizado com sucesso!");
                    // Redirecione o usu√°rio ou fa√ßa algo com o objeto `user`
                })
                .catch((error) => {
                    alert("Erro ao fazer login com Facebook: " + error.message);
                });
        });

        // Login com GitHub
        const githubProvider = new firebase.auth.GithubAuthProvider();
        document.getElementById("github-signin").addEventListener("click", () => {
            auth.signInWithPopup(githubProvider)
                .then((result) => {
                    const user = result.user;
                    alert("Login com GitHub realizado com sucesso!");
                    // Redirecione o usu√°rio ou fa√ßa algo com o objeto `user`
                })
                .catch((error) => {
                    alert("Erro ao fazer login com GitHub: " + error.message);
                });
        });

        // Observador de Autentica√ß√£o
        auth.onAuthStateChanged((user) => {
            if (user) {
                console.log("Usu√°rio logado:", user);
                // Redirecione para a p√°gina principal ou fa√ßa algo com o objeto `user`
            } else {
                console.log("Usu√°rio n√£o logado");
            }
        });
    </script>
</body>
</html>
}