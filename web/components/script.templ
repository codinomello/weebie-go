package components

templ ScriptHead() {
    @ScriptHeadSource()
    @ScriptHeadTheme()
    @ScriptHeadTailwindCSS()
}

templ ScriptHeadSource() {
    <!-- Tailwind CSS -->
    <script src="https://cdn.tailwindcss.com"></script>

    <!-- HTMX -->
    <script src="https://unpkg.com/htmx.org@2.0.4"></script>

    <!-- Flowbite CSS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/flowbite/2.2.0/flowbite.min.js"></script>

    <!-- Biblioteca para validação de e-mail -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/validator/13.11.0/validator.min.js"></script>
}

templ ScriptHeadTheme() {
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const themeToggleDarkIcon = document.getElementById('theme-toggle-dark-icon');
            const themeToggleLightIcon = document.getElementById('theme-toggle-light-icon');
            const themeToggleBtn = document.getElementById('theme-toggle');

            // Verifica o tema salvo no localStorage ou a preferência do sistema
            if (localStorage.getItem('color-theme') === 'dark' || (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
                // Se o tema escuro estiver ativo, exibe o ícone da lua e oculta o ícone do sol
                document.documentElement.classList.add('dark');
                themeToggleDarkIcon.classList.remove('hidden');
                themeToggleLightIcon.classList.add('hidden');
            } else {
                // Se o tema claro estiver ativo, exibe o ícone do sol e oculta o ícone da lua
                document.documentElement.classList.remove('dark');
                themeToggleLightIcon.classList.remove('hidden');
                themeToggleDarkIcon.classList.add('hidden');
            }

            // Adiciona o evento de clique ao botão de alternância de tema
            themeToggleBtn.addEventListener('click', () => {
                // Alterna os ícones
                themeToggleDarkIcon.classList.toggle('hidden');
                themeToggleLightIcon.classList.toggle('hidden');

                // Alterna o tema
                if (document.documentElement.classList.contains('dark')) {
                    document.documentElement.classList.remove('dark');
                    localStorage.setItem('color-theme', 'light');
                } else {
                    document.documentElement.classList.add('dark');
                    localStorage.setItem('color-theme', 'dark');
                }
            });
        });
    </script>
}

templ ScriptHeadTailwindCSS() {
    <script>
        tailwind.config = {
          darkMode: 'class',
          theme: {
            extend: {
              colors: {
                // Cores primárias
                red: '#FF0000',    // Vermelho
                green: '#32CD32',  // Verde
                blue: '#00BFFF',   // Azul
                lilac: '#C8A2C8',  // Lilás
                pink: '#FF1493',   // Rosa
                orange: '#FF6F00', // Laranja
                golden: '#FFD700', // Ouro

                // Cores sucundárias
                brown: '#8B4513',  // Marrom
                teal: '#40E0D0',   // Turquesa
                silver: '#C0C0C0', // Prata
                copper: '#B87333', // Cobre
              }
            }
          }
        }
    </script>
}

templ ScriptGetCurrentYear() {
    <script>
        // Ano atual
        var years = document.getElementsByClassName("current-year");
        Array.from(years).forEach(year => {
            year.innerHTML = new Date().getFullYear();
        });
    </script>
}

templ ScriptAnimations() {
    <script>
        // Adiciona animação de carregamento suave
        document.addEventListener('DOMContentLoaded', () => {
            const signUpForm = document.getElementById('email-signup-form');
            if (signUpForm) {
                signUpForm.addEventListener('submit', () => {
                    const button = signUpForm.querySelector('button[type="submit"]');
                    if (button) {
                        button.innerHTML = '<span class="inline-block animate-spin">⏳</span> Processando...';
                        button.disabled = true;
                    }
                });
            }
        });

        // Adiciona animação de carregamento suave
        document.addEventListener('DOMContentLoaded', () => {
            const signInForm = document.getElementById('email-signin-form');
            if (signInForm) {
                signInForm.addEventListener('submit', () => {
                    const button = signInForm.querySelector('button[type="submit"]');
                    if (button) {
                        button.innerHTML = '<span class="inline-block animate-spin">⏳</span> Processando...';
                        button.disabled = true;
                    }
                });
            }
        });
    </script>
}