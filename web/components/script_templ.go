// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.865
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func ScriptHead() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = ScriptHeadSource().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = ScriptHeadTheme().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = ScriptHeadTailwindCSS().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func ScriptHeadSource() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<!-- Tailwind CSS --><script src=\"https://cdn.tailwindcss.com\"></script><!-- HTMX --><script src=\"https://unpkg.com/htmx.org@2.0.4\" integrity=\"sha384-HGfztofotfshcF7+8n44JQL2oJmowVChPTg48S+jvZoztPfvwD79OC/LTtG6dMp+\" crossorigin=\"anonymous\"></script><!-- Flowbite CSS --><script src=\"https://cdnjs.cloudflare.com/ajax/libs/flowbite/2.2.0/flowbite.min.js\"></script><!-- Biblioteca para validação de e-mail --><script src=\"https://cdnjs.cloudflare.com/ajax/libs/validator/13.11.0/validator.min.js\"></script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func ScriptHeadTheme() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var3 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var3 == nil {
			templ_7745c5c3_Var3 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<script>\r\n        document.addEventListener('DOMContentLoaded', () => {\r\n            const themeToggleDarkIcon = document.getElementById('theme-toggle-dark-icon');\r\n            const themeToggleLightIcon = document.getElementById('theme-toggle-light-icon');\r\n            const themeToggleBtn = document.getElementById('theme-toggle');\r\n\r\n            // Verifica o tema salvo no localStorage ou a preferência do sistema\r\n            if (localStorage.getItem('color-theme') === 'dark' || (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {\r\n                // Se o tema escuro estiver ativo, exibe o ícone da lua e oculta o ícone do sol\r\n                document.documentElement.classList.add('dark');\r\n                themeToggleDarkIcon.classList.remove('hidden');\r\n                themeToggleLightIcon.classList.add('hidden');\r\n            } else {\r\n                // Se o tema claro estiver ativo, exibe o ícone do sol e oculta o ícone da lua\r\n                document.documentElement.classList.remove('dark');\r\n                themeToggleLightIcon.classList.remove('hidden');\r\n                themeToggleDarkIcon.classList.add('hidden');\r\n            }\r\n\r\n            // Adiciona o evento de clique ao botão de alternância de tema\r\n            themeToggleBtn.addEventListener('click', () => {\r\n                // Alterna os ícones\r\n                themeToggleDarkIcon.classList.toggle('hidden');\r\n                themeToggleLightIcon.classList.toggle('hidden');\r\n\r\n                // Alterna o tema\r\n                if (document.documentElement.classList.contains('dark')) {\r\n                    document.documentElement.classList.remove('dark');\r\n                    localStorage.setItem('color-theme', 'light');\r\n                } else {\r\n                    document.documentElement.classList.add('dark');\r\n                    localStorage.setItem('color-theme', 'dark');\r\n                }\r\n            });\r\n        });\r\n    </script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func ScriptHeadTailwindCSS() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var4 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var4 == nil {
			templ_7745c5c3_Var4 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "<script>\r\n        tailwind.config = {\r\n          darkMode: 'class',\r\n          theme: {\r\n            extend: {\r\n              colors: {\r\n                // Cores primárias\r\n                red: '#FF0000',    // Vermelho\r\n                green: '#32CD32',  // Verde\r\n                blue: '#00BFFF',   // Azul\r\n                yellow: '#FFFF00', // Amarelo\r\n                lilac: '#C8A2C8',  // Lilás\r\n                pink: '#FF1493',   // Rosa\r\n                orange: '#FF6F00', // Laranja\r\n                golden: '#FFD700', // Ouro\r\n\r\n                // Cores sucundárias\r\n                purple: '#7E22CE',   // Roxo\r\n                teal: '#40E0D0',     // Turquesa\r\n                brown: '#8B4513',    // Marrom\r\n                silver: '#C0C0C0',   // Prata\r\n                copper: '#B87333',   // Cobre\r\n                amber: '#FFBF00',    // Âmbar\r\n                indigo: '#4B0082',   // Índigo\r\n                lavender: '#E6E6FA', // Lavanda\r\n                mint: '#98FF98',     // Menta\r\n                coral: '#FF7F50',    // Coral\r\n                slate: '#708090',    // Ardósia\r\n                ivory: '#FFFFF0',    // Marfim\r\n                olive: '#808000',    // Oliva\r\n                maroon: '#800000',   // Bordeaux\r\n                peach: '#FFE5B4',    // Pêssego\r\n                graphite: '#383838', // Grafite\r\n              }\r\n            }\r\n          }\r\n        }\r\n    </script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func ScriptGetCurrentYear() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var5 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var5 == nil {
			templ_7745c5c3_Var5 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "<script>\r\n        // Ano atual\r\n        var years = document.getElementsByClassName(\"current-year\");\r\n        Array.from(years).forEach(year => {\r\n            year.innerHTML = new Date().getFullYear();\r\n        });\r\n    </script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func ScriptAnimations() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var6 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var6 == nil {
			templ_7745c5c3_Var6 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "<script>\r\n        // Adiciona animação de carregamento suave\r\n        document.addEventListener('DOMContentLoaded', () => {\r\n            const signUpForm = document.getElementById('email-signup-form');\r\n            if (signUpForm) {\r\n                signUpForm.addEventListener('submit', () => {\r\n                    const button = signUpForm.querySelector('button[type=\"submit\"]');\r\n                    if (button) {\r\n                        button.innerHTML = '<span class=\"inline-block animate-spin\">⏳</span> Processando...';\r\n                        button.disabled = true;\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        // Adiciona animação de carregamento suave\r\n        document.addEventListener('DOMContentLoaded', () => {\r\n            const signInForm = document.getElementById('email-signin-form');\r\n            if (signInForm) {\r\n                signInForm.addEventListener('submit', () => {\r\n                    const button = signInForm.querySelector('button[type=\"submit\"]');\r\n                    if (button) {\r\n                        button.innerHTML = '<span class=\"inline-block animate-spin\">⏳</span> Processando...';\r\n                        button.disabled = true;\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    </script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
