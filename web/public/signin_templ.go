// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.865
package public

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	components "github.com/codinomello/weebie-go/web/components"
	custom "github.com/codinomello/weebie-go/web/components/custom"
)

func SignIn() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<html lang=\"pt-BR\"><head><!-- Meta Tags -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Meta().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<!-- T√≠tulo -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Title("Weebie - Login").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "<!-- HTMX e Tailwind CSS -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.ScriptHead().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "<!-- Fonte -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.StyleHead().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "<!-- Flowbite CSS e √çcone -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Link("house_with_garden.png").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "</head><body class=\"bg-gray-100 dark:bg-gray-900\"><!-- Header -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Nav("Weebie", "page_facing_up.png").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "<!-- Formul√°rio de Login --><main class=\"flex-grow flex items-center justify-center p-4 pt-8\"><div class=\"w-full max-w-lg mx-auto\"><div class=\"bg-white dark:bg-gray-800 rounded-2xl p-8 shadow-lg border border-gray-200 dark:border-gray-700 transition-all duration-300 hover:shadow-xl\"><div class=\"text-center mb-6\"><h2 class=\"text-3xl font-bold text-orange dark:text-golden mb-2\">üìé Acesse a sua conta</h2><p class=\"text-gray-600 dark:text-gray-300\">Fa√ßa login para acessar sua conta</p></div><!-- Formul√°rio --><form id=\"email-signin-form\" hx-post=\"/users/signin\" hx-target=\"#auth-result\" hx-swap=\"innerHTML\" class=\"space-y-5 text-base\"><!-- E-mail --><div class=\"space-y-2\"><label for=\"email\" class=\"block text-base font-medium text-gray-700 dark:text-gray-300\">E-mail*</label> <input id=\"email\" name=\"email\" type=\"email\" required class=\"w-full px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-300 focus:ring-2 focus:ring-orange focus:border-transparent transition\"></div><!-- Senha --><div class=\"space-y-2\"><label for=\"password\" class=\"block text-base font-medium text-gray-700 dark:text-gray-300\">Senha*</label> <input id=\"password\" name=\"password\" type=\"password\" required class=\"w-full px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-300 focus:ring-2 focus:ring-orange focus:border-transparent transition\"><div class=\"flex justify-end pt-1\"><a href=\"/forgot-password\" class=\"text-sm text-blue-500 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300\">Esqueceu a senha?</a></div></div><!-- Resultado da Autentica√ß√£o --><div id=\"auth-result\" class=\"hidden\"></div><!-- Bot√£o de A√ß√£o --><button type=\"submit\" class=\"w-full mt-8 px-4 py-3 text-lg bg-gradient-to-r from-orange to-golden text-white font-semibold rounded-lg hover:opacity-90 transition-all duration-300 transform hover:scale-[1.02] shadow-md\">Entrar</button></form><!-- Divisor --><div class=\"flex items-center my-6\"><div class=\"flex-1 h-px bg-gray-300 dark:bg-gray-600\"></div><span class=\"px-4 text-md text-gray-600 dark:text-gray-300\">ou</span><div class=\"flex-1 h-px bg-gray-300 dark:bg-gray-600\"></div></div><!-- Bot√µes de OAuth2 -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = custom.OAuthButtons().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "<!-- Link para Cadastro --><div class=\"mt-6 text-center\"><p class=\"text-base text-gray-600 dark:text-gray-300\">N√£o tem uma conta?  <a href=\"/signup\" class=\"text-orange font-medium hover:underline dark:text-golden\">Cadastre-se</a></p></div></div></div></main><!-- Rodap√© -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.FooterLogin().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, "<!-- Scripts --><script>\r\n            const auth = firebase.auth();\r\n            const googleProvider = new firebase.auth.GoogleAuthProvider();\r\n            const facebookProvider = new firebase.auth.FacebookAuthProvider();\r\n            const githubProvider = new firebase.auth.GithubAuthProvider();\r\n\r\n            document.getElementById(\"email-signin-form\").addEventListener(\"submit\", async (e) => {\r\n                e.preventDefault();\r\n                \r\n                const email = document.getElementById(\"email\").value;\r\n                const password = document.getElementById(\"password\").value;\r\n\r\n                if (!email || !password) return alert(\"Informe email e senha\");\r\n\r\n                try {\r\n                    const result = await auth.signInWithEmailAndPassword(email, password);\r\n                    const idToken = await result.user.getIdToken();\r\n\r\n                    const res = await fetch(\"http://localhost:8080/auth/verify\", {\r\n                        method: \"POST\",\r\n                        headers: { \"Content-Type\": \"application/json\" },\r\n                        body: JSON.stringify({ id_token: idToken })\r\n                    });\r\n\r\n                    const data = await res.json();\r\n                    console.log(\"Login bem-sucedido. UID:\", data.uid);\r\n                    window.location.href = \"/dashboard\"; // Redirecionar ap√≥s login\r\n                } catch (err) {\r\n                    console.error(err);\r\n                    document.getElementById(\"auth-result\").classList.remove(\"hidden\");\r\n                    document.getElementById(\"auth-result\").innerHTML = `\r\n                        <div class=\"p-3 mb-4 text-sm text-red-700 bg-red-100 rounded-lg dark:bg-red-200 dark:text-red-800\">\r\n                            Erro no login: ${err.message}\r\n                        </div>\r\n                    `;\r\n                }\r\n            });\r\n\r\n            async function signInWithProvider(provider) {\r\n                try {\r\n                    const result = await auth.signInWithPopup(provider);\r\n                    const user = result.user;\r\n                    const idToken = await user.getIdToken();\r\n\r\n                    const payload = {\r\n                        name: user.displayName || \"\",          // Nome completo\r\n                        email: user.email || \"\",               // E-mail (obrigat√≥rio)\r\n                        phone: user.phoneNumber || \"\",         // Telefone\r\n                        password: \"\",                          // Vazio para login social\r\n                        id_token: idToken,                     // Token de autentica√ß√£o\r\n                        cpf: \"\",                               // CPF\r\n                        rg: \"\",                                // RG\r\n                        sex: \"none\",                           // Padr√£o: \"Prefiro n√£o dizer\"\r\n                        age: 0,                                // Idade padr√£o\r\n                        address: \"\",                           // Endere√ßo\r\n                        complement: \"\",                        // Complemento\r\n                        number: \"\",                            // N√∫mero\r\n                        neighborhood: \"\",                      // Bairro\r\n                        city: \"\",                              // Cidade\r\n                        state: \"\",                             // Estado (UF)\r\n                        cep: \"\",                               // CEP\r\n                        role: \"user\",                          // Permiss√£o padr√£o\r\n                        terms: true                            // Aceite dos termos\r\n                    };\r\n\r\n                    const response = await fetch(\"http://localhost:8080/users/signin\", {\r\n                        method: \"POST\",\r\n                        headers: { \"Content-Type\": \"application/json\" },\r\n                        body: JSON.stringify(payload)\r\n                    });\r\n\r\n                    if (response.ok) {\r\n                        window.location.href = \"/dashboard\"; // Redirecionar ap√≥s login\r\n                    } else {\r\n                        throw new Error(\"Falha na autentica√ß√£o com o servidor\");\r\n                    }\r\n                } catch (err) {\r\n                    console.error(err);\r\n                    document.getElementById(\"auth-result\").classList.remove(\"hidden\");\r\n                    document.getElementById(\"auth-result\").innerHTML = `\r\n                        <div class=\"p-3 mb-4 text-sm text-red-700 bg-red-100 rounded-lg dark:bg-red-200 dark:text-red-800\">\r\n                            Erro no login social: ${err.message}\r\n                        </div>\r\n                    `;\r\n                }\r\n            }\r\n\r\n            document.getElementById(\"google-signin\")?.addEventListener(\"click\", () => signInWithProvider(googleProvider));\r\n            document.getElementById(\"facebook-signin\")?.addEventListener(\"click\", () => signInWithProvider(facebookProvider));\r\n            document.getElementById(\"github-signin\")?.addEventListener(\"click\", () => signInWithProvider(githubProvider));\r\n        </script><!-- Anima√ß√£o de Carregamento -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = custom.LoadingAnimations().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 10, "</body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
