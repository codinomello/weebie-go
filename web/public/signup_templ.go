// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.865
package public

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import components "github.com/codinomello/weebie-go/web/components"

func SignUp() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<html lang=\"pt-BR\"><head><!-- Meta Tags -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Meta().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<!-- Título -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Title("Weebie - Inscreva-se").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "<!-- HTMX e Tailwind CSS -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.ScriptHead().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "<!-- Fonte -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.StyleHead().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "<!-- Flowbite CSS e Ícone -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Link("house_with_garden.png").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "<!-- Firebase SDK --><script type=\"module\">\r\n            // Import the functions you need from the SDKs you need\r\n            import { initializeApp } from 'https://www.gstatic.com/firebasejs/11.8.1/firebase-app.js';\r\n            import { getAuth, createUserWithEmailAndPassword } from \"https://www.gstatic.com/firebasejs/11.8.1/firebase-auth.js\";\r\n            \r\n            // Your web app's Firebase configuration\r\n            const firebaseConfig = {\r\n                apiKey: \"AIzaSyAI0Tc7GssKwWwtVdrz6OaK6KFACx58N5U\",\r\n                authDomain: \"weebie-go.firebaseapp.com\",\r\n                projectId: \"weebie-go\",\r\n                storageBucket: \"weebie-go.appspot.com\",\r\n                messagingSenderId: \"321509944065\",\r\n                appId: \"1:321509944065:web:199a546b7055f461ec4900\",\r\n                measurementId: \"G-S5CG0CLRVS\"\r\n            };\r\n\r\n            // Initialize Firebase\r\n            const app = initializeApp(firebaseConfig);\r\n            const auth = getAuth(app);\r\n\r\n            const signupForm = document.getElementById(\"email-signup-form\");\r\n            \r\n            signupForm?.addEventListener(\"submit\", async (e) => {\r\n                e.preventDefault();\r\n                \r\n                // Get form data\r\n                const formData = new FormData(signupForm);\r\n                const userData = Object.fromEntries(formData.entries());\r\n                \r\n                // Basic validation\r\n                if (!userData.email || !userData.password) {\r\n                    showMessage(\"Por favor, preencha e-mail e senha\", \"error\");\r\n                    return;\r\n                }\r\n\r\n                try {\r\n                    // Create user with Firebase Auth\r\n                    const userCredential = await createUserWithEmailAndPassword(\r\n                        auth,\r\n                        userData.email,\r\n                        userData.password\r\n                    );\r\n                    \r\n                    // Get Firebase ID token\r\n                    const idToken = await userCredential.user.getIdToken();\r\n                    \r\n                    // Prepare complete user data\r\n                    const completeUserData = {\r\n                        ...userData,\r\n                        id_token: idToken,\r\n                        uid: userCredential.user.uid,\r\n                        role: \"user\",\r\n                        status: \"active\"\r\n                    };\r\n\r\n                    // Send to backend\r\n                    const response = await fetch(\"/api/auth/register\", {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\",\r\n                            \"Authorization\": `Bearer ${idToken}`\r\n                        },\r\n                        body: JSON.stringify(completeUserData)\r\n                    });\r\n\r\n                    if (!response.ok) {\r\n                        // If backend fails, delete the Firebase user\r\n                        await userCredential.user.delete();\r\n                        throw new Error(await response.text());\r\n                    }\r\n\r\n                    // Success - redirect\r\n                    showMessage(\"Cadastro realizado com sucesso!\", \"success\");\r\n                    setTimeout(() => window.location.href = \"/\", 2000);\r\n                } catch (error) {\r\n                    console.error(\"Erro no cadastro:\", error);\r\n                    showMessage(parseAuthError(error), \"error\");\r\n                }\r\n            });\r\n\r\n            // Helper function to parse auth errors\r\n            function parseAuthError(error) {\r\n                if (error.code) {\r\n                    switch (error.code) {\r\n                        case 'auth/email-already-in-use':\r\n                            return 'Este e-mail já está cadastrado.';\r\n                        case 'auth/invalid-email':\r\n                            return 'E-mail inválido.';\r\n                        case 'auth/weak-password':\r\n                            return 'Senha muito fraca (mínimo 6 caracteres).';\r\n                        case 'auth/operation-not-allowed':\r\n                            return 'Operação não permitida.';\r\n                        default:\r\n                            return `Erro: ${error.message}`;\r\n                    }\r\n                }\r\n                return error.message || 'Ocorreu um erro desconhecido.';\r\n            }\r\n\r\n            // Function to show messages\r\n            function showMessage(message, type) {\r\n                const authResult = document.getElementById(\"auth-result\");\r\n                if (!authResult) return;\r\n\r\n                authResult.innerHTML = `\r\n                    <div class=\"p-3 mb-4 text-sm rounded-lg ${\r\n                        type === 'success' \r\n                            ? 'bg-green-100 text-green-700 dark:bg-green-200 dark:text-green-800' \r\n                            : 'bg-red-100 text-red-700 dark:bg-red-200 dark:text-red-800'\r\n                    }\">\r\n                        ${message}\r\n                    </div>\r\n                `;\r\n                authResult.classList.remove(\"hidden\");\r\n            }\r\n        </script></head><body class=\"bg-gray-100 dark:bg-gray-900\"><!-- Header -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Nav("Weebie", "art.png").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "<!-- Formulário de Login/Cadastro --><main class=\"flex-grow flex items-center justify-center p-4 pt-8\"><div class=\"w-full max-w-xl\"><div class=\"bg-white dark:bg-gray-800 rounded-2xl p-8 shadow-lg border border-gray-200 dark:border-gray-700 transition-all duration-300 hover:shadow-xl\"><div class=\"text-center mb-6\"><h2 id=\"form-title\" class=\"text-3xl font-bold text-orange dark:text-golden mb-2\">👤 Cadastre-se</h2><p class=\"text-gray-600 dark:text-gray-300\">Junte-se à nossa comunidade de transformação</p></div><!-- Formulário de Autenticação--><form id=\"email-signup-form\" class=\"space-y-5 text-base\"><!-- Seção 1: Dados Pessoais --><div class=\"grid grid-cols-1 md:grid-cols-4 gap-5\"><!-- Nome --><div class=\"space-y-2 md:col-span-3\"><label class=\"block text-base font-medium text-gray-700 dark:text-gray-300\">Nome Completo*</label> <input name=\"name\" type=\"text\" required class=\"w-full px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-300 focus:ring-2 focus:ring-orange focus:border-transparent transition\"></div><!-- Idade --><div class=\"space-y-2\"><label class=\"block text-base font-medium text-gray-700 dark:text-gray-300\">Idade*</label> <input name=\"age\" type=\"number\" required min=\"1\" max=\"120\" class=\"w-full px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-300 focus:ring-2 focus:ring-orange focus:border-transparent transition\"></div></div><div class=\"grid grid-cols-1 md:grid-cols-3 gap-5\"><!-- CPF --><div class=\"space-y-2\"><label class=\"block text-base font-medium text-gray-700 dark:text-gray-300\">CPF*</label> <input name=\"cpf\" type=\"text\" required placeholder=\"000.000.000-00\" data-mask=\"000.000.000-00\" class=\"cpf-mask w-full px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-300 focus:ring-2 focus:ring-orange focus:border-transparent transition\"></div><!-- RG --><div class=\"space-y-2\"><label class=\"block text-base font-medium text-gray-700 dark:text-gray-300\">RG*</label> <input name=\"rg\" type=\"text\" required placeholder=\"00.000.000-0\" data-mask=\"00.000.000-0\" class=\"w-full px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-300 focus:ring-2 focus:ring-orange focus:border-transparent transition\"></div><!-- Sexo --><div class=\"space-y-2\"><label class=\"block text-base font-medium text-gray-700 dark:text-gray-300\">Sexo*</label> <select name=\"sex\" required class=\"w-full px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-300 focus:ring-2 focus:ring-orange focus:border-transparent transition\"><option value=\"\">Selecione</option> <option value=\"male\">Masculino</option> <option value=\"female\">Feminino</option> <option value=\"other\">Outro</option> <option value=\"none\">Prefiro não dizer</option></select></div></div><!-- Seção 2: Contato --><div class=\"grid grid-cols-1 md:grid-cols-2 gap-5\"><!-- E-mail --><div class=\"space-y-2\"><label class=\"block text-base font-medium text-gray-700 dark:text-gray-300\">E-mail*</label> <input name=\"email\" type=\"email\" required class=\"w-full px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-300 focus:ring-2 focus:ring-orange focus:border-transparent transition\"></div><!-- Telefone --><div class=\"space-y-2\"><label class=\"block text-base font-medium text-gray-700 dark:text-gray-300\">Telefone*</label> <input name=\"phone\" type=\"tel\" required placeholder=\"(00) 00000-0000\" data-mask=\"(00) 00000-0000\" class=\"w-full px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-300 focus:ring-2 focus:ring-orange focus:border-transparent transition\"></div></div><!-- Seção 3: Endereço --><!-- CEP --><div class=\"space-y-2\"><label class=\"block text-base font-medium text-gray-700 dark:text-gray-300\">CEP*</label><div class=\"flex gap-2\"><input name=\"cep\" type=\"text\" required placeholder=\"00000-000\" data-mask=\"00000-000\" class=\"cep-mask flex-1 px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-300 focus:ring-2 focus:ring-orange focus:border-transparent transition\"> <button type=\"button\" id=\"buscar-cep\" class=\"px-4 py-2 bg-gradient-to-r from-orange to-golden rounded-lg transition text-white font-semibold rounded-lg hover:opacity-90 transition-all duration-300 transform hover:scale-[1.02] shadow-m\">Buscar</button></div></div><div class=\"grid grid-cols-1 md:grid-cols-4 gap-5\"><!-- Endereço --><div class=\"space-y-2 md:col-span-3\"><label class=\"block text-base font-medium text-gray-700 dark:text-gray-300\">Endereço*</label> <input name=\"address\" type=\"text\" required class=\"w-full px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-300 focus:ring-2 focus:ring-orange focus:border-transparent transition\"></div><!-- Número --><div class=\"space-y-2 md:col-span-1\"><label class=\"block text-base font-medium text-gray-700 dark:text-gray-300\">Número*</label> <input name=\"number\" type=\"text\" required class=\"w-full px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-300 focus:ring-2 focus:ring-orange focus:border-transparent transition\"></div></div><!-- Complemento --><div class=\"space-y-2\"><label class=\"block text-base font-medium text-gray-700 dark:text-gray-300\">Complemento</label> <input name=\"complement\" type=\"text\" class=\"w-full px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-300 focus:ring-2 focus:ring-orange focus:border-transparent transition\"></div><div class=\"grid grid-cols-1 md:grid-cols-3 gap-5\"><!-- Bairro --><div class=\"space-y-2\"><label class=\"block text-base font-medium text-gray-700 dark:text-gray-300\">Bairro*</label> <input name=\"neighborhood\" type=\"text\" required class=\"w-full px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-300 focus:ring-2 focus:ring-orange focus:border-transparent transition\"></div><!-- Cidade --><div class=\"space-y-2\"><label class=\"block text-base font-medium text-gray-700 dark:text-gray-300\">Cidade*</label> <input name=\"city\" type=\"text\" required class=\"w-full px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-300 focus:ring-2 focus:ring-orange focus:border-transparent transition\"></div><!-- Estado --><div class=\"space-y-2\"><label class=\"block text-base font-medium text-gray-700 dark:text-gray-300\">Estado*</label> <select name=\"state\" required class=\"w-full px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-300 focus:ring-2 focus:ring-orange focus:border-transparent transition\"><option value=\"\">Selecione</option> <option value=\"AC\">Acre</option> <option value=\"AL\">Alagoas</option> <option value=\"AP\">Amapá</option> <option value=\"AM\">Amazonas</option> <option value=\"BA\">Bahia</option> <option value=\"CE\">Ceará</option> <option value=\"DF\">Distrito Federal</option> <option value=\"ES\">Espírito Santo</option> <option value=\"GO\">Goiás</option> <option value=\"MA\">Maranhão</option> <option value=\"MT\">Mato Grosso</option> <option value=\"MS\">Mato Grosso do Sul</option> <option value=\"MG\">Minas Gerais</option> <option value=\"PA\">Pará</option> <option value=\"PB\">Paraíba</option> <option value=\"PR\">Paraná</option> <option value=\"PE\">Pernambuco</option> <option value=\"PI\">Piauí</option> <option value=\"RJ\">Rio de Janeiro</option> <option value=\"RN\">Rio Grande do Norte</option> <option value=\"RS\">Rio Grande do Sul</option> <option value=\"RO\">Rondônia</option> <option value=\"RR\">Roraima</option> <option value=\"SC\">Santa Catarina</option> <option value=\"SP\">São Paulo</option> <option value=\"SE\">Sergipe</option></select></div></div><!-- Seção 4: Segurança --><!-- Senha --><div class=\"space-y-2\"><label class=\"block text-base font-medium text-gray-700 dark:text-gray-300\">Senha*</label> <input name=\"password\" type=\"password\" required class=\"w-full px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-300 focus:ring-2 focus:ring-orange focus:border-transparent transition\"></div><!-- Termos e Condições --><div class=\"flex items-center mt-3\"><input id=\"terms\" name=\"terms\" type=\"checkbox\" required class=\"w-5 h-5 text-orange bg-gray-100 border-gray-300 rounded focus:ring-orange dark:focus:ring-orange dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600\"> <label for=\"terms\" class=\"ms-3 text-base text-gray-700 dark:text-gray-300\">Concordo com os <a href=\"#\" class=\"text-orange hover:underline dark:text-golden\">Termos e Condições</a></label></div><!-- Div para mensagens de autenticação --><div id=\"auth-result\" class=\"hidden\"></div><!-- Botão de Ação --><button type=\"submit\" class=\"w-full mt-8 px-4 py-3 text-lg bg-gradient-to-r from-orange to-golden text-white font-semibold rounded-lg hover:opacity-90 transition-all duration-300 transform hover:scale-[1.02] shadow-md\"><span id=\"form-action\">Criar Conta</span></button></form><!-- Scripts para máscaras e CEP --><script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script><script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery.mask/1.14.16/jquery.mask.min.js\"></script><script>\r\n                    $(document).ready(function(){\r\n                        // Máscaras corrigidas\r\n                        $('.cpf-mask').mask('000.000.000-00', {reverse: true});\r\n                        $('[data-mask=\"00.000.000-0\"]').mask('00.000.000-0');\r\n                        $('[data-mask=\"(00) 00000-0000\"]').mask('(00) 00000-0000');\r\n                        $('.cep-mask').mask('00000-000');\r\n\r\n                        // Auto-completar CEP\r\n                        $('#buscar-cep').click(function(){\r\n                            const cep = $('.cep-mask').cleanVal();\r\n                            if(cep.length !== 8) return;\r\n                            \r\n                            // ViaCEP\r\n                            $.getJSON(`https://viacep.com.br/ws/${cep}/json/?callback=?`, function(data){\r\n                                if(!data.erro) {\r\n                                    $('input[name=\"address\"]').val(data.logradouro);\r\n                                    $('input[name=\"neighborhood\"]').val(data.bairro);\r\n                                    $('input[name=\"city\"]').val(data.localidade);\r\n                                    $('select[name=\"state\"]').val(data.uf);\r\n                                    $('input[name=\"complement\"]').val(data.complemento);\r\n                                    $('input[name=\"number\"]').focus();\r\n                                } else {\r\n                                    alert('CEP não encontrado!');\r\n                                }\r\n                            });\r\n                        });\r\n                    });\r\n                    </script><div class=\"mt-6 text-center\"><p class=\"text-md text-gray-600 dark:text-gray-300\">Já tem uma conta?  <a href=\"/signin\" class=\"text-orange font-medium hover:underline dark:text-golden\">Faça login</a></p></div></div></div></main><!-- Rodapé -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.FooterLogin().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "<!-- Animações -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.ScriptAnimations().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, "</body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
