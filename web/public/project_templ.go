// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.865
package public

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"time"

	components "github.com/codinomello/weebie-go/web/components"
)

func Project() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<html lang=\"pt-BR\"><head><!-- Meta Tags -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Meta().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<!-- Título -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Title("Weebie - Cadastro de Projetos").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "<!-- HTMX e Tailwind CSS -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.ScriptHead().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "<!-- Fonte -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.StyleHead().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "<!-- Ícone -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Link("house_with_garden.png").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "</head><body class=\"bg-gray-100 dark:bg-gray-900 min-h-screen flex flex-col\"><!-- Header -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Nav("Cadastro de Projetos", "house_buildings.png").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "<!-- Formulário --><main class=\"flex-grow container mx-auto px-4 py-8 max-w-3xl\"><div class=\"bg-white dark:bg-gray-800 rounded-2xl p-8 shadow-xl border border-gray-200 dark:border-gray-700\"><h1 class=\"text-3xl font-bold text-center mb-8 text-orange dark:text-golden\"><span class=\"text-blue\">📋</span> Cadastro de Projeto</h1><form hx-post=\"/projects\" hx-swap=\"none\" class=\"space-y-8\"><!-- Seção de Informações Básicas --><div class=\"p-6 rounded-xl bg-blue bg-opacity-20 border-l-4 border-blue shadow-md\"><h2 class=\"text-2xl font-bold text-blue mb-6 flex items-center gap-3\"><span class=\"text-3xl\">📝</span> Informações Básicas</h2><div class=\"grid md:grid-cols-2 gap-6\"><!-- IDs ocultos --><input type=\"hidden\" name=\"id\" id=\"project-id\"> <input type=\"hidden\" name=\"owner_id\" id=\"owner-id\"><!-- Título --><div class=\"space-y-2\"><label for=\"title\" class=\"block text-md font-medium text-gray-700 dark:text-gray-300\">Título do Projeto*</label> <input type=\"text\" id=\"title\" name=\"title\" required maxlength=\"100\" class=\"w-full px-4 py-2 rounded-lg dark:text-gray-300 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 focus:ring-2 focus:ring-blue focus:border-transparent transition\" placeholder=\"Nome do seu projeto\"><p class=\"text-xs text-gray-500 dark:text-gray-400\">Máximo 100 caracteres</p></div><!-- Ano --><div class=\"space-y-2\"><label for=\"year\" class=\"block text-md font-medium text-gray-700 dark:text-gray-300\">Ano*</label> <input type=\"number\" id=\"year\" name=\"year\" min=\"2000\" max=\"@{currentYear()+5}\" required class=\"w-full px-4 py-2 rounded-lg dark:text-gray-300 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 focus:ring-2 focus:ring-blue focus:border-transparent transition\" value=\"@{currentYear()}\"></div></div></div><!-- Seção de Detalhes --><div class=\"p-6 rounded-xl bg-pink bg-opacity-20 border-l-4 border-pink shadow-md\"><h2 class=\"text-2xl font-bold text-pink mb-6 flex items-center gap-3\"><span class=\"text-3xl\">✨</span> Detalhes do Projeto</h2><div class=\"space-y-6\"><!-- Descrição --><div class=\"space-y-2\"><label for=\"details\" class=\"block text-md font-medium text-gray-700 dark:text-gray-300\">Descrição*</label> <textarea id=\"details\" name=\"details\" rows=\"4\" required maxlength=\"1000\" class=\"w-full px-4 py-2 rounded-lg dark:text-gray-300 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 focus:ring-2 focus:ring-pink focus:border-transparent transition\" placeholder=\"Descreva seu projeto em detalhes\"></textarea><p class=\"text-xs text-gray-500 dark:text-gray-400\">Máximo 1000 caracteres</p></div><!-- Impacto --><div class=\"space-y-2\"><label for=\"impact\" class=\"block text-md font-medium text-gray-700 dark:text-gray-300\">Impacto Esperado*</label> <textarea id=\"impact\" name=\"impact\" rows=\"3\" required maxlength=\"500\" class=\"w-full px-4 py-2 rounded-lg dark:text-gray-300 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 focus:ring-2 focus:ring-pink focus:border-transparent transition\" placeholder=\"Qual impacto positivo seu projeto terá?\"></textarea><p class=\"text-xs text-gray-500 dark:text-gray-400\">Máximo 500 caracteres</p></div><!-- Ícone e Status --><div class=\"grid md:grid-cols-2 gap-6\"><!-- Ícone --><div class=\"space-y-2\"><label for=\"icon\" class=\"block text-md font-medium text-gray-700 dark:text-gray-300\">Ícone do Projeto</label> <select id=\"icon\" name=\"icon\" class=\"w-full px-4 py-2 rounded-lg dark:text-gray-300 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 focus:ring-2 focus:ring-pink focus:border-transparent transition\"><option value=\"\">Selecione um ícone</option> <option value=\"🌱\">🌱 Sustentabilidade</option> <option value=\"💡\">💡 Inovação</option> <option value=\"👥\">👥 Comunidade</option> <option value=\"🏥\">🏥 Saúde</option> <option value=\"🎓\">🎓 Educação</option> <option value=\"🌍\">🌍 Meio Ambiente</option> <option value=\"🔧\">🔧 Tecnologia</option></select></div><!-- Status --><div class=\"space-y-2\"><label for=\"status\" class=\"block text-md font-medium text-gray-700 dark:text-gray-300\">Status*</label> <select id=\"status\" name=\"status\" required class=\"w-full px-4 py-2 rounded-lg dark:text-gray-300 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 focus:ring-2 focus:ring-pink focus:border-transparent transition\"><option value=\"active\" selected>Ativo</option> <option value=\"completed\">Concluído</option> <option value=\"archived\">Arquivado</option></select></div></div></div></div><!-- Seção de Classificação --><div class=\"p-6 rounded-xl bg-green bg-opacity-20 border-l-4 border-green shadow-md\"><h2 class=\"text-2xl font-bold text-green mb-6 flex items-center gap-3\"><span class=\"text-3xl\">🏷️</span> Classificação</h2><div class=\"grid md:grid-cols-2 gap-6\"><!-- Curso --><div class=\"space-y-2\"><label for=\"course\" class=\"block text-md font-medium text-gray-700 dark:text-gray-300\">Curso*</label> <select id=\"course\" name=\"course\" required class=\"w-full px-4 py-2 rounded-lg dark:text-gray-300 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 focus:ring-2 focus:ring-green focus:border-transparent transition\"><option value=\"\">Selecione um curso</option> <option value=\"Administração\">Administração</option> <option value=\"Edificações\">Edificações</option> <option value=\"Enfermagem\">Enfermagem</option> <option value=\"Informática\">Informática</option> <option value=\"Mecatrônica\">Mecatrônica</option> <option value=\"Outro\">Outro</option></select></div><!-- Outro Curso (condicional) --><div id=\"other-course-container\" class=\"space-y-2 hidden\"><label for=\"other_course\" class=\"block text-md font-medium text-gray-700 dark:text-gray-300\">Especifique o Curso*</label> <input type=\"text\" id=\"other_course\" name=\"other_course\" class=\"w-full px-4 py-2 rounded-lg dark:text-gray-300 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 focus:ring-2 focus:ring-green focus:border-transparent transition\" placeholder=\"Digite o nome do curso\"></div><!-- Membros --><div class=\"space-y-2 md:col-span-2\"><label for=\"members-input\" class=\"block text-md font-medium text-gray-700 dark:text-gray-300\">Adicionar Membros</label><div class=\"relative\"><input type=\"email\" id=\"members-input\" class=\"w-full px-4 py-2 rounded-lg dark:text-gray-300 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 focus:ring-2 focus:ring-green focus:border-transparent transition pr-10\" placeholder=\"Digite e-mails dos membros (separados por vírgula)\"> <button type=\"button\" id=\"add-member-btn\" class=\"absolute right-2 top-1/2 transform -translate-y-1/2 text-green hover:text-green-700\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"></path></svg></button></div><input type=\"hidden\" id=\"members\" name=\"members\"><div id=\"members-container\" class=\"flex flex-wrap gap-2 mt-2\"></div><p class=\"text-sm text-gray-600 dark:text-gray-300\">Digite o e-mail e pressione Enter ou clique no botão +</p></div></div></div><!-- Seção ODS --><div class=\"p-6 rounded-xl bg-yellow-600 bg-opacity-20 border-l-4 border-yellow-500 shadow-md\"><h2 class=\"text-2xl font-bold text-yellow-600 dark:text-yellow-300 mb-6 flex items-center gap-3\"><span class=\"text-3xl\">🌎</span> ODS Relacionados</h2><div class=\"grid grid-cols-2 md:grid-cols-4 gap-4\" id=\"ods-container\"><!-- ODS serão inseridos aqui via JavaScript --></div><input type=\"hidden\" id=\"ods\" name=\"ods\"><p class=\"text-sm text-gray-600 dark:text-gray-300 mt-4\">Selecione os Objetivos de Desenvolvimento Sustentável relacionados ao seu projeto</p></div><!-- Modal para detalhes do ODS --><div id=\"ods-modal\" class=\"hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\"><div class=\"bg-white dark:bg-gray-800 rounded-xl max-w-md w-full p-6 shadow-2xl\"><div class=\"flex justify-between items-start mb-4\"><div><h3 id=\"ods-modal-title\" class=\"text-xl font-bold text-yellow-600 dark:text-yellow-300\"></h3><p id=\"ods-modal-number\" class=\"text-sm text-gray-500 dark:text-gray-400\"></p></div><button onclick=\"closeODSModal()\" class=\"text-gray-500 hover:text-gray-700 dark:hover:text-gray-300\"><svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path></svg></button></div><div class=\"flex justify-center mb-4\"><span id=\"ods-modal-emoji\" class=\"text-5xl\"></span></div><p id=\"ods-modal-description\" class=\"text-gray-700 dark:text-gray-300\"></p><div class=\"mt-6 flex justify-end\"><button onclick=\"closeODSModal()\" class=\"px-4 py-2 bg-yellow-500 text-white rounded-lg hover:bg-yellow-600 transition\">Fechar</button></div></div></div><!-- Datas (automáticas) --><input type=\"hidden\" name=\"created_at\" id=\"created-at\"> <input type=\"hidden\" name=\"updated_at\" id=\"updated-at\"><!-- Botões --><div class=\"flex flex-col md:flex-row justify-end gap-4 mt-8\"><!-- Botão limpar --><button type=\"button\" id=\"clear-btn\" class=\"px-6 py-3 bg-gray-500 text-white font-medium rounded-lg transition-all duration-150 transform hover:scale-[1.025] flex items-center gap-2 hover:bg-gray-600\"><span class=\"text-xl\">🗑️</span> Limpar Campos</button><!-- Botão salvar --><button type=\"submit\" class=\"px-6 py-3 bg-green text-white font-medium rounded-lg transition-all duration-150 transform hover:scale-[1.025] flex items-center gap-2 hover:bg-green-600\"><span class=\"text-xl\">💾</span> Salvar Projeto</button></div></form></div></main><!-- Scripts -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.ScriptBody().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "<script>\r\n            // Lista completa de ODS definida diretamente no template\r\n            const odsList = [\r\n                { number: \"1\", emoji: \"❌\", title: \"Erradicação da Pobreza\", description: \"Acabar com a pobreza em todas as suas formas, em todos os lugares\" },\r\n                { number: \"2\", emoji: \"🍽️\", title: \"Fome Zero e Agricultura Sustentável\", description: \"Acabar com a fome, alcançar a segurança alimentar e melhoria da nutrição e promover a agricultura sustentável\" },\r\n                { number: \"3\", emoji: \"❤️\", title: \"Saúde e Bem-Estar\", description: \"Assegurar uma vida saudável e promover o bem-estar para todos, em todas as idades\" },\r\n                { number: \"4\", emoji: \"🎓\", title: \"Educação de Qualidade\", description: \"Assegurar a educação inclusiva e equitativa e de qualidade, e promover oportunidades de aprendizagem ao longo da vida para todos\" },\r\n                { number: \"5\", emoji: \"🚺\", title: \"Igualdade de Gênero\", description: \"Alcançar a igualdade de gênero e empoderar todas as mulheres e meninas\" },\r\n                { number: \"6\", emoji: \"💧\", title: \"Água Potável e Saneamento\", description: \"Assegurar a disponibilidade e gestão sustentável da água e saneamento para todos\" },\r\n                { number: \"7\", emoji: \"⚡\", title: \"Energia Limpa e Acessível\", description: \"Assegurar o acesso confiável, sustentável, moderno e a preço acessível à energia para todos\" },\r\n                { number: \"8\", emoji: \"💼\", title: \"Trabalho Decente e Crescimento Econômico\", description: \"Promover o crescimento econômico sustentado, inclusivo e sustentável, emprego pleno e produtivo e trabalho decente para todos\" },\r\n                { number: \"9\", emoji: \"🏭\", title: \"Indústria, Inovação e Infraestrutura\", description: \"Construir infraestruturas resilientes, promover a industrialização inclusiva e sustentável e fomentar a inovação\" },\r\n                { number: \"10\", emoji: \"↕️\", title: \"Redução das Desigualdades\", description: \"Reduzir a desigualdade dentro dos países e entre eles\" },\r\n                { number: \"11\", emoji: \"🏙️\", title: \"Cidades e Comunidades Sustentáveis\", description: \"Tornar as cidades e os assentamentos humanos inclusivos, seguros, resilientes e sustentáveis\" },\r\n                { number: \"12\", emoji: \"🔄\", title: \"Consumo e Produção Responsáveis\", description: \"Assegurar padrões de produção e de consumo sustentáveis\" },\r\n                { number: \"13\", emoji: \"🌡️\", title: \"Ação Contra a Mudança Global do Clima\", description: \"Tomar medidas urgentes para combater a mudança do clima e seus impactos\" },\r\n                { number: \"14\", emoji: \"🐠\", title: \"Vida na Água\", description: \"Conservação e uso sustentável dos oceanos, dos mares e dos recursos marinhos para o desenvolvimento sustentável\" },\r\n                { number: \"15\", emoji: \"🌳\", title: \"Vida Terrestre\", description: \"Proteger, recuperar e promover o uso sustentável dos ecossistemas terrestres, gerir de forma sustentável as florestas, combater a desertificação, deter e reverter a degradação da terra e deter a perda de biodiversidade\" },\r\n                { number: \"16\", emoji: \"⚖️\", title: \"Paz, Justiça e Instituições Eficazes\", description: \"Promover sociedades pacíficas e inclusivas para o desenvolvimento sustentável, proporcionar o acesso à justiça para todos e construir instituições eficazes, responsáveis e inclusivas em todos os níveis\" },\r\n                { number: \"17\", emoji: \"🤝\", title: \"Parcerias e Meios de Implementação\", description: \"Fortalecer os meios de implementação e revitalizar a parceria global para o desenvolvimento sustentável\" }\r\n            ];\r\n\r\n            document.addEventListener('DOMContentLoaded', () => {\r\n                // Configurar campos automáticos\r\n                const now = new Date().toISOString();\r\n                document.getElementById('created-at').value = now;\r\n                document.getElementById('updated-at').value = now;\r\n                \r\n                // Mostrar campo \"Outro Curso\" quando selecionado\r\n                const courseSelect = document.getElementById('course');\r\n                const otherCourseContainer = document.getElementById('other-course-container');\r\n                \r\n                courseSelect.addEventListener('change', () => {\r\n                    if (courseSelect.value === 'Outro') {\r\n                        otherCourseContainer.classList.remove('hidden');\r\n                        document.getElementById('other_course').required = true;\r\n                    } else {\r\n                        otherCourseContainer.classList.add('hidden');\r\n                        document.getElementById('other_course').required = false;\r\n                    }\r\n                });\r\n                \r\n                // Gerenciamento de membros\r\n                const membersInput = document.getElementById('members-input');\r\n                const membersHidden = document.getElementById('members');\r\n                const membersContainer = document.getElementById('members-container');\r\n                const addMemberBtn = document.getElementById('add-member-btn');\r\n                \r\n                // Adicionar membro ao pressionar Enter ou vírgula\r\n                membersInput.addEventListener('keydown', (e) => {\r\n                    if (e.key === 'Enter' || e.key === ',') {\r\n                        e.preventDefault();\r\n                        addMember();\r\n                    }\r\n                });\r\n                \r\n                // Adicionar membro ao clicar no botão +\r\n                addMemberBtn.addEventListener('click', addMember);\r\n                \r\n                function addMember() {\r\n                    const email = membersInput.value.trim();\r\n                    \r\n                    // Validar e-mail\r\n                    if (email && /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\r\n                        // Verificar se já existe\r\n                        const existingEmails = Array.from(membersContainer.querySelectorAll('.member-tag'))\r\n                            .map(tag => tag.dataset.email.toLowerCase());\r\n                            \r\n                        if (existingEmails.includes(email.toLowerCase())) {\r\n                            showError('Este e-mail já foi adicionado');\r\n                            return;\r\n                        }\r\n                        \r\n                        // Criar tag do membro\r\n                        const memberTag = document.createElement('div');\r\n                        memberTag.className = 'member-tag flex items-center bg-green-100 dark:bg-green-900 px-3 py-1 rounded-full text-sm';\r\n                        memberTag.dataset.email = email;\r\n                        memberTag.innerHTML = `\r\n                            <span class=\"text-green-800 dark:text-green-200\">${email}</span>\r\n                            <button type=\"button\" class=\"ml-2 text-green-600 dark:text-green-300 hover:text-green-800 dark:hover:text-green-100\" onclick=\"removeMember(this)\">\r\n                                ×\r\n                            </button>\r\n                        `;\r\n                        \r\n                        membersContainer.appendChild(memberTag);\r\n                        membersInput.value = '';\r\n                        updateMembersHidden();\r\n                    } else {\r\n                        showError('Por favor, insira um e-mail válido');\r\n                    }\r\n                }\r\n                \r\n                // Função global para remover membros\r\n                window.removeMember = function(button) {\r\n                    button.parentElement.remove();\r\n                    updateMembersHidden();\r\n                };\r\n                \r\n                function updateMembersHidden() {\r\n                    const emails = Array.from(membersContainer.querySelectorAll('.member-tag')).map(tag => tag.dataset.email);\r\n                    membersHidden.value = JSON.stringify(emails);\r\n                }\r\n                \r\n                function showError(message) {\r\n                    // Remover erros anteriores\r\n                    const existingError = document.getElementById('email-error');\r\n                    if (existingError) existingError.remove();\r\n                    \r\n                    // Criar elemento de erro\r\n                    const errorElement = document.createElement('p');\r\n                    errorElement.id = 'email-error';\r\n                    errorElement.className = 'text-red-500 text-xs mt-1';\r\n                    errorElement.textContent = message;\r\n                    \r\n                    // Inserir após o input\r\n                    membersInput.parentNode.insertBefore(errorElement, membersInput.nextSibling);\r\n                    \r\n                    // Remover após 3 segundos\r\n                    setTimeout(() => {\r\n                        errorElement.remove();\r\n                    }, 3000);\r\n                }\r\n\r\n                // Gerenciamento de ODS\r\n                const odsContainer = document.getElementById('ods-container');\r\n                const odsHidden = document.getElementById('ods');\r\n                \r\n                odsList.forEach(ods => {\r\n                    const odsCard = document.createElement('label');\r\n                    odsCard.className = 'flex items-center p-3 rounded-lg bg-white dark:bg-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600 border border-gray-200 dark:border-gray-600 transition cursor-pointer';\r\n                    \r\n                    odsCard.innerHTML = `\r\n                        <input type=\"checkbox\" name=\"ods_checkbox\" value=\"${ods.number}\" \r\n                               class=\"ods-checkbox w-5 h-5 text-yellow-600 border-yellow-300 rounded focus:ring-yellow-500 dark:bg-gray-800 dark:border-gray-600\">\r\n                        <span class=\"ml-3 text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n                            ${ods.emoji} ODS ${ods.number}\r\n                        </span>\r\n                        <button type=\"button\" onclick=\"showODSDetails(${ods.number})\" class=\"ml-auto text-gray-400 hover:text-yellow-600\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                            </svg>\r\n                        </button>\r\n                    `;\r\n                    \r\n                    odsContainer.appendChild(odsCard);\r\n                });\r\n                \r\n                // Atualizar ODS hidden quando checkboxes mudam\r\n                document.addEventListener('change', (e) => {\r\n                    if (e.target.classList.contains('ods-checkbox')) {\r\n                        const selectedODS = Array.from(document.querySelectorAll('.ods-checkbox:checked')).map(cb => cb.value);\r\n                        odsHidden.value = JSON.stringify(selectedODS);\r\n                    }\r\n                });\r\n\r\n                // Limpar formulário\r\n                document.getElementById('clear-btn').addEventListener('click', () => {\r\n                    if (confirm('Tem certeza que deseja limpar todos os campos?')) {\r\n                        document.querySelector('form').reset();\r\n                        membersContainer.innerHTML = '';\r\n                        membersHidden.value = '';\r\n                        odsHidden.value = '';\r\n                        document.querySelectorAll('.ods-checkbox').forEach(cb => cb.checked = false);\r\n                        otherCourseContainer.classList.add('hidden');\r\n                    }\r\n                });\r\n            });\r\n            \r\n            // Função para mostrar detalhes do ODS\r\n            window.showODSDetails = function(odsNumber) {\r\n                const ods = odsList.find(o => o.number === odsNumber.toString());\r\n                if (ods) {\r\n                    document.getElementById('ods-modal-title').textContent = ods.title;\r\n                    document.getElementById('ods-modal-number').textContent = `ODS ${ods.number}`;\r\n                    document.getElementById('ods-modal-emoji').textContent = ods.emoji;\r\n                    document.getElementById('ods-modal-description').textContent = ods.description;\r\n                    document.getElementById('ods-modal').classList.remove('hidden');\r\n                }\r\n            };\r\n            \r\n            // Função para fechar modal ODS\r\n            window.closeODSModal = function() {\r\n                document.getElementById('ods-modal').classList.add('hidden');\r\n            };\r\n        </script></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func currentYear() int {
	return time.Now().Year()
}

var _ = templruntime.GeneratedTemplate
