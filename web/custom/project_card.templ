package custom

import "fmt"

templ ProjectCard(title string, description string, status string, progress int, participants int, location string, ods []string, categories []string, stars int) {
    <div class="bg-white dark:bg-gray-900 rounded-xl shadow-sm overflow-hidden border border-gray-100 dark:border-gray-800 transition-all duration-300 hover:shadow-md hover:border-gray-200 dark:hover:border-gray-700 group">
        <!-- Cabeçalho com Imagem Minimalista -->
        <div class="h-40 bg-gradient-to-br from-gray-50 to-gray-100 dark:from-gray-800 dark:to-gray-700 relative flex items-center justify-center">
            <!-- Ícone centralizado maior e mais sutil -->
            <span class="text-6xl opacity-20 group-hover:opacity-30 transition-opacity duration-300">{ getProjectIcon(categories[0]) }</span>
            
            <!-- Badge de Status mais discreto -->
            <div class={ "absolute top-3 right-3 m-0 text-xs px-2 py-1 rounded-md font-semibold backdrop-blur-sm " + getStatusColorClass(status) }>
                { getStatusText(status) }
            </div>
        </div>
        
        <!-- Corpo do Card mais compacto -->
        <div class="p-4">
            <!-- Título e Estrelas em linha única -->
            <div class="flex justify-between items-center mb-3">
                <h3 class="text-lg font-semibold text-gray-900 dark:text-white truncate">
                    { title }
                </h3>
                
                <!-- Sistema de Estrelas simplificado -->
                <button 
                    class="star-button flex items-center gap-1 text-sm text-gray-400 hover:text-yellow-400 transition-colors" 
                    data-starred="false" 
                    hx-post="/projects/star" 
                    hx-swap="none"
                >
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"></path>
                    </svg>
                    <span class="star-count text-xs font-medium">{ stars }</span>
                </button>
            </div>
            
            <!-- Tags mais compactas -->
            <div class="flex flex-wrap gap-1.5 mb-3">
                <span class={ "px-1.5 py-0.5 rounded-md text-[10px] uppercase tracking-wider font-medium " + getCategoryColorClass(categories[0]) }>
                    { categories[0] }
                </span>
                for _, odsNumber := range ods {
                    <span class="bg-orange-100 text-orange-800 dark:bg-orange-900/30 dark:text-orange-400 px-1.5 py-0.5 rounded-md text-[10px] font-medium">
                        ODS { odsNumber }
                    </span>
                }
            </div>
            
            <!-- Descrição mais compacta -->
            <p class="text-sm text-gray-600 dark:text-gray-300 mb-3 line-clamp-2">
                { description }
            </p>
            
            <!-- Barra de Progresso mais fina -->
            <div class="mb-3">
                <div class="flex items-center justify-between text-xs mb-1">
                    <span class="text-gray-500 dark:text-gray-400">Progresso</span>
                    <span class={ "font-semibold " + getProgressColorClass(progress) }>{ progress }%</span>
                </div>
                <div class="h-1 bg-gray-200 dark:bg-gray-800 rounded-full">
                    <div class={ "h-1 rounded-full " + getProgressBarColorClass(progress) } style={ "width: " + fmt.Sprintf("%d", progress) + "%" }></div>
                </div>
            </div>
            
            <!-- Metadados em linha única -->
            <div class="flex items-center justify-between text-xs text-gray-500 dark:text-gray-400">
                <div class="flex items-center gap-1 truncate">
                    <svg class="w-3 h-3 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                    </svg>
                    <span class="truncate">{ location }</span>
                </div>
                <div class="flex items-center gap-1">
                    <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z"></path>
                    </svg>
                    <span>{ participants }</span>
                </div>
            </div>
            
            <!-- Botões de Ação mais discretos -->
            <div class="flex gap-2 mt-3">
                <button 
                    class="flex-1 py-1.5 bg-gray-900 text-white text-xs font-medium rounded-lg hover:bg-gray-800 dark:bg-gray-700 dark:hover:bg-gray-600 transition flex items-center justify-center gap-1"
                    hx-post="/projects/join" 
                    hx-swap="none"
                >
                    <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z"></path>
                    </svg>
                    Participar
                </button>
                <button 
                    class="w-8 h-8 flex items-center justify-center bg-gray-100 dark:bg-gray-800 text-gray-500 dark:text-gray-400 rounded-lg hover:bg-gray-200 dark:hover:bg-gray-700 transition"
                    hx-get="/projects/comments" 
                    hx-target="#comments-modal"
                    title="Comentar"
                >
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"></path>
                    </svg>
                </button>
            </div>
        </div>
    </div>
}

// Funções auxiliares atualizadas para um visual mais minimalista
func getStatusColorClass(status string) string {
    switch status {
    case "active":
        return "bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-400"
    case "new":
        return "bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-400"
    case "completed":
        return "bg-purple-100 text-purple-800 dark:bg-purple-900/30 dark:text-purple-400"
    default:
        return "bg-gray-100 text-gray-800 dark:bg-gray-800 dark:text-gray-400"
    }
}

func getStatusText(status string) string {
    switch status {
    case "active":
        return "Ativo"
    case "new":
        return "Novo"
    case "completed":
        return "Concluído"
    default:
        return status
    }
}

func getCategoryColorClass(category string) string {
    switch category {
    case "Meio Ambiente":
        return "bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-400"
    case "Educação":
        return "bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-400"
    case "Saúde":
        return "bg-red-100 text-red-800 dark:bg-red-900/30 dark:text-red-400"
    case "Tecnologia":
        return "bg-purple-100 text-purple-800 dark:bg-purple-900/30 dark:text-purple-400"
    case "Cultura":
        return "bg-yellow-100 text-yellow-800 dark:bg-yellow-900/30 dark:text-yellow-400"
    default:
        return "bg-gray-100 text-gray-800 dark:bg-gray-800 dark:text-gray-400"
    }
}

func getProgressColorClass(progress int) string {
    if progress >= 75 {
        return "text-green-600 dark:text-green-400"
    } else if progress >= 50 {
        return "text-blue-600 dark:text-blue-400"
    } else if progress >= 25 {
        return "text-orange-600 dark:text-orange-400"
    }
    return "text-red-600 dark:text-red-400"
}

func getProgressBarColorClass(progress int) string {
    if progress >= 75 {
        return "bg-green-500"
    } else if progress >= 50 {
        return "bg-blue-500"
    } else if progress >= 25 {
        return "bg-orange-500"
    }
    return "bg-red-500"
}

// Ícones mantidos os mesmos
func getProjectIcon(category string) string {
    switch category {
    case "Meio Ambiente":
        return "🌱"
    case "Educação":
        return "📚"
    case "Saúde":
        return "🏥"
    case "Tecnologia":
        return "💻"
    case "Cultura":
        return "🎭"
    default:
        return "🌟"
    }
}